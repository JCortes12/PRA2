vino<-read.csv("winequality-red.csv", header = TRUE)
vino<-read.csv("~PRA2_Datos/winequality-red.csv", header = TRUE)
vino<-read.csv("~PRA2_Datos/winequality-red.csv", header = TRUE)
vino<-read.csv("~/PRA2_Datos/winequality-red.csv", header = TRUE)
head(vino[,1:5])
str(vino)
summary(vino)
sapply(vino, function(x) sum(is.na(x)))
boxplot.matrix(vino)
boxplot(vino)
boxplot(vino$fixed.acidity)
boxplots.stats(vino$fixed.acidity)
boxplot.stats(vino$fixed.acidity)
boxplot(vino$volatile.acidity)
boxplot.stats(vino$volatile.acidity)$out
boxplot(vino$citric.acid)
boxplot.stats(vino$citric.acid)$out
boxplot(vino$residual.sugar)
boxplot.stats(vino$residual.sugar)$out
boxplot(vino$chlorides)
boxplot.stats(vino$chlorides)$out
boxplot(vino$free.sulfur.dioxide)
boxplot.stats(vino$free.sulfur.dioxide)$out
boxplot(vino$ total.sulfur.dioxide)
boxplot.stats(vino$total.sulfur.dioxide)$out
boxplot(vino$density)
boxplot.stats(vino$density)$out
boxplot(vino$pH)
boxplot.stats(vino$pH)$out
boxplot(vino$sulphates)
boxplot.stats(vino$sulphates)$out
boxplot(vino$alcohol)
boxplot.stats(vino$alcohol)$out
boxplot(vino$quality)
boxplot.stats(vino$quality)$out
library(nortest)
library(nortest)
alpha = 0.05
col.names = colnames(vino)
for (i in 1:ncol(vino)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(vino[,i]) | is.numeric(vino[,i])) {
p_val = ad.test(vino[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
if (i < ncol(vino) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
install.packages("nortest")
library(nortest)
alpha = 0.05
col.names = colnames(vino)
for (i in 1:ncol(vino)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(vino[,i]) | is.numeric(vino[,i])) {
p_val = ad.test(vino[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
if (i < ncol(vino) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
fligner.test(quality ~ fixed.acidity, data = vino)
fligner.test(quality ~ volatile.acidity, data = vino)
fligner.test(quality ~ citric.acid, data = vino)
fligner.test(quality ~ residual.sugar, data = vino)
fligner.test(quality ~ chlorides, data = vino)
fligner.test(quality ~ free.sulfur.dioxide, data = vino)
fligner.test(quality ~ total.sulfur.dioxide, data = vino)
fligner.test(quality ~ density, data = vino)
fligner.test(quality ~ pH, data = vino)
fligner.test(quality ~ sulfates, data = vino)
fligner.test(quality ~ sulphates, data = vino)
fligner.test(quality ~ alcohol, data = vino)
corr_matrix <- matrix(nc = 2, nr = 0)
colnames(corr_matrix) <- c("estimate", "p-value")
for (i in 1:(ncol(vino) - 1)) {
if (is.integer(vino[,i]) | is.numeric(vino[,i])) {
spearman_test = cor.test(vino[,i], vino[,length(vino)], method = "spearman")
corr_coef = spearman_test$estimate
p_val = spearman_test$p.value
pair = matrix(ncol = 2, nrow = 1)
pair[1][1] = corr_coef
pair[2][1] = p_val
corr_matrix <- rbind(corr_matrix, pair)
rownames(corr_matrix)[nrow(corr_matrix)] <- colnames(vino)[i]
}
}
warnings()
corr_matrix <- matrix(nc = 2, nr = 0)
colnames(corr_matrix) <- c("estimate", "p-value")
for (i in 1:(ncol(vino) - 1)) {
if (is.integer(vino[,i]) | is.numeric(vino[,i])) {
spearman_test = cor.test(vino[,i], vino[,length(vino)], method = "spearman",exact=FALSE)
corr_coef = spearman_test$estimate
p_val = spearman_test$p.value
pair = matrix(ncol = 2, nrow = 1)
pair[1][1] = corr_coef
pair[2][1] = p_val
corr_matrix <- rbind(corr_matrix, pair)
rownames(corr_matrix)[nrow(corr_matrix)] <- colnames(vino)[i]
}
}
print(corr_matrix)
vino2=vino
vino2 %>%
mutate()
vino2 %>%
mutate(alcohol2= case_when(
alcohol>10.2~"alcohólico",
TRUE~"no alcohólico")
)
lybrary(dplyr)
library(dplyr)
vino2 %>%
mutate(alcohol2= case_when(
alcohol>10.2~"alcohólico",
TRUE~"no alcohólico")
)
View(vino2)
vino2<-vino2 %>%
mutate(alcohol2= case_when(
alcohol>10.2~"alcohólico",
TRUE~"no alcohólico")
)
vino2.alcoholico.calidad <- vino2[vino2$alcohol2 == "alcoholico",]$quality
vino2.noalcoholico.calidad <- vino2[vino2$alcohol2 == "no alcoholico",]$quality
t.test(vino2.alcoholico.calidad, vino2.noalcoholico.calidad, alternative = "less")
vino2.alcoholico.calidad <- vino2[vino2$alcohol2 == "alcohólico",]$quality
vino2.noalcoholico.calidad <- vino2[vino2$alcohol2 == "no alcohólico",]$quality
t.test(vino2.alcoholico.calidad, vino2.noalcoholico.calidad, alternative = "less")
afija = vino$fixed.acidity
avolatil = vino$volatile.acidty
acitrica = vino$citric.acid
azucar = vino$residual.sugar
avolatil = vino$volatile.acidity
cloruro = vino$chlorides
fazufre = vino$free.sulfur.dioxide
tazufre = vino$total.sulfur.dioxide
densidad = vino$density
ph = vino$pH
sulfato = vino$sulphates
alcohol = vino$alcohol
modelo1 <- lm(quality ~ afija – avolatil + acitrica + azucar - cloruro – fazufre – tazufre – densidad – ph + sulfato + alcohol, data = vino)
modelo1 <- lm(calidad ~ afija – avolatil + acitrica + azucar - cloruro – fazufre – tazufre – densidad – ph + sulfato + alcohol, data = vino)
modelo1 <- lm(calidad ~ afija –avolatil + acitrica + azucar - cloruro – fazufre – tazufre – densidad – ph + sulfato + alcohol, data = vino)
calidad=vino$quality
modelo1 <- lm(calidad ~ afija – avolatil + acitrica + azucar - cloruro – fazufre – tazufre – densidad – ph + sulfato + alcohol, data = vino)
modelo1 <- lm(calidad ~ afija – avolatil + acitrica + azucar - cloruro – fazufre – tazufre – densidad – ph + sulfato + alcohol, data = vino)
modelo1<-lm(calidad~afija-avolatil+acitrica+azucar-cloruro-fazufre-tazufre-denisdad-ph+sulfato+alcohol, data=vino)
modelo1<-lm(calidad~afija-avolatil+acitrica+azucar-cloruro-fazufre-tazufre-densidad-ph+sulfato+alcohol, data=vino)
modelo2<-lm(calidad~afija-avolatil+acitrica-cloruro-tazufre-densidad+sulfato+alcohol, data=vino))
modelo2<-lm(calidad~afija-avolatil+acitrica-cloruro-tazufre-densidad+sulfato+alcohol, data=vino)
modelo3<-lm(calidad~afija-avolatil+azucar-cloruro-fazufre-tazufre+sulfato+alcohol, data=vino)
modelo4<-lm(calidad~avolatil-fazufre-tazufre-densidad-ph+sulfato+alcohol, data=vino)
tabla.coeficientes <- matrix(c(1, summary(modelo1)$r.squared, 2, summary(modelo2)$r.squared, 3, summary(modelo3)$r.squared, 4, summary(modelo4)$r.squared), ncol = 2, byrow = TRUE)
colnames(tabla.coeficientes) <- c("Modelo", "R^2")
tabla.coeficientes
modelo5<-lm(calidad~avolatil-fazufre-ph+sulfato+alcohol, data=vino)
tabla.coeficientes <- matrix(c(1, summary(modelo1)$r.squared, 2, summary(modelo2)$r.squared, 3, summary(modelo3)$r.squared, 4, summary(modelo4)$r.squared, 5, summary(modelo5)$r.squared), ncol = 2, byrow = TRUE)
colnames(tabla.coeficientes) <- c("Modelo", "R^2")
tabla.coeficientes
save.image("~/PRA2_Datos/Pra2_Datos/Pra2.RData")
modelo6<-lm(calidad~alcohol, data=vino)
tabla.coeficientes <- matrix(c(1, summary(modelo1)$r.squared, 2, summary(modelo2)$r.squared, 3, summary(modelo3)$r.squared, 4, summary(modelo4)$r.squared, 5, summary(modelo5)$r.squared, 6, summary(modelo6)$r.squared), ncol = 2, byrow = TRUE)
colnames(tabla.coeficientes) <- c("Modelo", "R^2")
tabla.coeficientes
library(psych)
install.packages("psych")
library(psych)
corPlot(data=vino, cex = 1.2, main = "Matriz de correlación")
plot(fixed.acidity, quality, pch = 19, col = "lightblue")
plot(vino$fixed.acidity, vino$quality, pch = 19, col = "lightblue")
abline(lm(vino$quality ~ vino$fixed.acidity), col = "red", lwd = 3)
text(paste("Correlación:", round(cor(vino$fixed.acidity, vino$quality), 2)), vino$fixed.acidity = 25, vino$quality = 95)
text(paste("Correlación:", round(cor(x, y), 2)), x = 25, y = 95)
text(paste("Correlación:", round(cor(x, y), 2)), x = 25, y = 95)
vino.cor<-cor(vino, method="pearson")
round(vino.cor, digits=2)
corrplot(vino.cor)
install.packages("corrplot")
corrplot(vino.cor)
par(mfrow=c(1, 2))
plot(x=vino$fixed.acidity, y=vino$quality)
plot(x=vino$fixed.acidity, y=vino$quality, pch='.',
xlab='Fixed Acidity',
ylab='Calidad del vino')
save.image("~/PRA2_Datos/Pra2_Datos/Pra2.RData")
correlation_matrix = vino.corr()
corrplot(cor(vino), method = "circle")
install.packages("corrplot")
library("corrplot")
corrplot(cor(vino), method = "circle")
install.packages("ggcorrplot")
library("ggcorrplot")
ggcorrplot(cor(vino))
save.image("~/PRA2_Datos/Pra2_Datos/Pra2.RData")
pairs(vino)
boxplot(vino2$quality ~ vino2$alcohol2, col = "blue", main = "Calidad del vino según alcohol")
step(object = modelo1, direction = "both", trace = 1)
modelo7<-lm(calidad~afija + acitrica + sulfato + alcohol, data=vino)
library(ggplot2)
library(gridExtra)
library(dplyr)
plot1 <- ggplot(data = vino, aes(acidezfija, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
plot2 <- ggplot(data = vino, aes(acidocitrico, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
plot3 <- ggplot(data = vino, aes(sulfato, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
plot4 <- ggplot(data = vino, aes(alcohol, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
grid.arrange(plot1, plot2, plot3, plot4)
plot1 <- ggplot(data = vino, aes(afija, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
plot2 <- ggplot(data = vino, aes(acitrica, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
plot3 <- ggplot(data = vino, aes(sulfato, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
plot4 <- ggplot(data = vino, aes(alcohol, modelo7$residuals)) + geom_point() + geom_smooth(color = "firebrick") + geom_hline(yintercept = 0) + theme_bw()
grid.arrange(plot1, plot2, plot3, plot4)
qqnorm(modelo7$residuals)
qqline(modelo7$residuals)
qqnorm(modelo7$residuals)
qqline(modelo7$residuals)
shapiro.test(modelo7$residuals)
save.image("~/PRA2_Datos/Pra2_Datos/Pra2.RData")
View(vino2)
View(vino2)
